{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(chmod:*)",
      "Bash(npm install)",
      "Bash(npm start:*)",
      "Bash(npm whoami:*)",
      "Bash(npm publish:*)",
      "Bash(npm pkg:*)",
      "Bash(npm logout)",
      "Bash(node:*)",
      "Bash(npm test)",
      "Bash(ls:*)",
      "Bash(/usr/local/bin/npm whoami)",
      "Bash(npm view:*)",
      "Bash(npm run sync:*)",
      "Bash(find:*)",
      "Bash(rm:*)",
      "Bash(true)",
      "Bash(grep:*)",
      "Bash(echo:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git commit:*)",
      "Bash(npm version:*)",
      "Bash(npm link:*)",
      "Bash(claude-code-templates:*)"
    ],
    "deny": []
  },
  "hooks": {
    "PostToolUse": [
      {
        "matcher": "Edit",
        "hooks": [
          {
            "type": "command",
            "command": "git add \"$CLAUDE_TOOL_FILE_PATH\" 2>/dev/null || true"
          }
        ]
      },
      {
        "matcher": "Write",
        "hooks": [
          {
            "type": "command",
            "command": "git add \"$CLAUDE_TOOL_FILE_PATH\" 2>/dev/null || true"
          }
        ]
      }
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "bash -c 'input=$(cat); MODEL=$(echo \"$input\" | jq -r \".model.display_name\"); DIR=$(echo \"$input\" | jq -r \".workspace.current_dir\"); DEPLOY_DATA=$(curl -s -H \"Authorization: Bearer $VERCEL_TOKEN\" \"https://api.vercel.com/v6/deployments?projectId=$VERCEL_PROJECT_ID&limit=1\" 2>/dev/null); if [ -n \"$DEPLOY_DATA\" ] && [ \"$DEPLOY_DATA\" != \"null\" ]; then STATE=$(echo \"$DEPLOY_DATA\" | jq -r \".deployments[0].state // empty\"); URL=$(echo \"$DEPLOY_DATA\" | jq -r \".deployments[0].url // empty\" | cut -c1-20); CREATED=$(echo \"$DEPLOY_DATA\" | jq -r \".deployments[0].created // empty\"); if [ -n \"$CREATED\" ] && [ \"$CREATED\" != \"null\" ]; then AGO=$(( ($(date +%s) - $CREATED/1000) / 60 )); TIME_AGO=\"${AGO}m ago\"; else TIME_AGO=\"unknown\"; fi; case \"$STATE\" in READY) STATUS_ICON=\"‚úÖ\";; BUILDING) STATUS_ICON=\"üîÑ\";; QUEUED) STATUS_ICON=\"‚è≥\";; ERROR) STATUS_ICON=\"‚ùå\";; *) STATUS_ICON=\"‚ùì\";; esac; else STATE=\"unavailable\"; URL=\"\"; TIME_AGO=\"unknown\"; STATUS_ICON=\"‚ùì\"; fi; echo \"[$MODEL] üöÄ $STATUS_ICON $STATE | üåê $URL | ‚è∞ $TIME_AGO | üìÅ ${DIR##*/}\"'"
  }
}
